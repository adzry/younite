name: EAS Build & Deploy
on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: EAS Build (Preview Android)
        run: npx eas build --platform android --profile preview --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Deploy to Railway
        run: |
          echo "::notice title=Deployment::üöÄ Deploying to Railway..."
          npm install -g railway
          railway up --service younite-api
          echo "::notice title=Deployment::‚úÖ Railway deploy triggered"
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

      - name: Fetch Railway logs
        run: |
          echo "::notice title=Logs::üìú Capturing Railway logs..."
          npm install -g railway
          TIMESTAMP=$(date +'%Y-%m-%dT%H-%M-%S')
          mkdir -p logs
          for attempt in {1..3}; do
            if railway logs --service younite-api > "logs/railway-$TIMESTAMP.log"; then
              echo "::notice title=Logs::‚úÖ Logs captured successfully (logs/railway-$TIMESTAMP.log)"
              break
            else
              echo "::warning title=Logs::‚ö†Ô∏è Attempt $attempt failed to fetch logs, retrying in 10s..."
              sleep 10
            fi
          done
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

      - name: Wait for API to warm up
        run: |
          echo "::notice title=HealthCheck::‚è≥ Waiting 30s for Railway to warm up..."
          sleep 30

      - name: Extended Health Check with Slack-style Logs
        id: healthcheck
        run: |
          success=false
          mkdir -p logs
          TIMESTAMP=$(date +'%Y-%m-%dT%H-%M-%S')
          for i in {1..15}; do
            echo "::notice title=HealthCheck::üîé Attempt $i: Checking API..."
            ROOT=$(curl -s -o /dev/null -w "%{http_code}" https://younite-api.up.railway.app/)
            HEALTH=$(curl -s -o /dev/null -w "%{http_code}" https://younite-api.up.railway.app/health)

            echo "::notice title=HealthCheck::üì° root=$ROOT | health=$HEALTH"
            echo "Attempt $i - root=$ROOT health=$HEALTH" >> logs/healthcheck-$TIMESTAMP.log

            if [ "$ROOT" = "200" ] && [ "$HEALTH" = "200" ]; then
              echo "::notice title=HealthCheck::‚úÖ API healthy on attempt $i"
              success=true
              break
            fi
            echo "::warning title=HealthCheck::‚ö†Ô∏è Not ready (root=$ROOT, health=$HEALTH), retrying in 15s..."
            sleep 15
          done
          if [ "$success" != "true" ]; then
            echo "::error title=HealthCheck::‚ùå API failed health check after 15 attempts"
            exit 1
          fi

      - name: Auto-Redeploy on Failure
        if: failure() && steps.healthcheck.outcome == 'failure'
        run: |
          echo "::warning title=Redeploy::üîÑ Redeploying via Railway..."
          npm install -g railway
          railway up --service younite-api
          echo "::notice title=Redeploy::üì¢ Redeploy triggered!"
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

      - name: Fetch Railway logs after redeploy
        if: failure() && steps.healthcheck.outcome == 'failure'
        run: |
          echo "::notice title=Logs::üìú Capturing Railway logs after redeploy..."
          npm install -g railway
          TIMESTAMP=$(date +'%Y-%m-%dT%H-%M-%S')
          mkdir -p logs
          if railway logs --service younite-api > "logs/railway-redeploy-$TIMESTAMP.log"; then
            echo "::notice title=Logs::‚úÖ Redeploy logs captured (logs/railway-redeploy-$TIMESTAMP.log)"
          else
            echo "::warning title=Logs::‚ö†Ô∏è Failed to fetch redeploy logs"
          fi
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

      - name: Bundle all logs into artifact
        run: |
          echo "::notice title=Logs::üì¶ Bundling logs..."
          mkdir -p artifacts
          tar -czf artifacts/younite-logs-${{ github.run_id }}.tar.gz logs/
          echo "::notice title=Logs::‚úÖ Logs bundled into artifacts/younite-logs-${{ github.run_id }}.tar.gz"

      - name: Upload Railway logs artifact
        uses: actions/upload-artifact@v4
        with:
          name: younite-logs-${{ github.run_id }}
          path: artifacts/younite-logs-${{ github.run_id }}.tar.gz
          retention-days: 14
