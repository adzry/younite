name: EAS Build & Deploy

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: EAS Build (Preview Android)
        run: npx eas build --platform android --profile preview --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Deploy to Railway
        run: |
          echo "üöÄ Deploying to Railway..."
          npm install -g railway
          railway up --ci
          echo "::notice title=Deployment::‚úÖ Railway deploy triggered"
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

      - name: Pipe Railway Logs (post-deploy)
        run: |
          echo "üìú Fetching Railway logs..."
          npm install -g railway
          railway logs --service younite-api --ci --tail 60
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

      - name: Wait for API to warm up
        run: |
          echo "‚è≥ Waiting 30s for Railway to warm up..."
          sleep 30

      - name: Extended Health Check with Slack-style Logs
        id: healthcheck
        run: |
          success=false
          for i in {1..15}; do
            echo "üîé Attempt $i: Checking API..."
            ROOT=$(curl -s -o /dev/null -w "%{http_code}" https://younite-api.up.railway.app/)
            HEALTH=$(curl -s -o /dev/null -w "%{http_code}" https://younite-api.up.railway.app/health)

            echo "üì° root=$ROOT | health=$HEALTH"

            if [ "$ROOT" = "200" ] && [ "$HEALTH" = "200" ]; then
              echo "::notice title=HealthCheck::‚úÖ API healthy on attempt $i"
              success=true
              break
            fi

            echo "::warning title=HealthCheck::‚ö†Ô∏è Not ready (root=$ROOT, health=$HEALTH), retrying in 15s..."
            sleep 15
          done

          if [ "$success" != "true" ]; then
            echo "::error title=HealthCheck::‚ùå API failed health check after 15 attempts"
            exit 1
          fi

      - name: Auto-Redeploy on Failure
        if: failure() && steps.healthcheck.outcome == 'failure'
        run: |
          echo "üîÑ Redeploying via Railway..."
          npm install -g railway
          railway up --ci
          echo "::notice title=Redeploy::üì¢ Redeploy triggered!"
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

      - name: Pipe Railway Logs (post-redeploy)
        if: failure() && steps.healthcheck.outcome == 'failure'
        run: |
          echo "üìú Fetching Railway logs after redeploy..."
          npm install -g railway
          railway logs --service younite-api --ci --tail 60
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

      - name: Wait after Redeploy
        if: failure() && steps.healthcheck.outcome == 'failure'
        run: |
          echo "‚è≥ Waiting 40s after redeploy..."
          sleep 40

      - name: Second Extended Health Check
        if: failure() && steps.healthcheck.outcome == 'failure'
        run: |
          success=false
          for i in {1..10}; do
            echo "üîé Second pass attempt $i..."
            ROOT=$(curl -s -o /dev/null -w "%{http_code}" https://younite-api.up.railway.app/)
            HEALTH=$(curl -s -o /dev/null -w "%{http_code}" https://younite-api.up.railway.app/health)

            echo "üì° root=$ROOT | health=$HEALTH"

            if [ "$ROOT" = "200" ] && [ "$HEALTH" = "200" ]; then
              echo "::notice title=HealthCheck::‚úÖ API passed after redeploy!"
              success=true
              break
            fi

            echo "::warning title=HealthCheck::‚ö†Ô∏è Still not ready, retrying in 15s..."
            sleep 15
          done

          if [ "$success" != "true" ]; then
            echo "::error title=HealthCheck::‚ùå FINAL FAIL: API failed even after redeploy retries"
            exit 1
          fi
